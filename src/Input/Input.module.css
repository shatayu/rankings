.container {
    width: 100%;
    min-height: 100vh;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
}

.textboxContainer {
    width: 100%;
    min-height: 35vh;
    height: 35vh;
    align-self: flex-start;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    flex-shrink: 0;

    /* this needs to be 15px more than the margin-bottom for buttonContainer since entries have 15px margin above them
     * but textboxes don't
     */

    margin-bottom: 10px;
}

.textbox {
    height: 60px;
    width: 60vw;
    font-size: 28px;
    text-align: center;
    background-color: #111111;
    outline: none;
    border-width: 0px;
    border-bottom: 5px solid #BBBBBB;
    color: #BBBBBB;

    transition-duration: 200ms;
}

@media (hover: hover) and (pointer: fine) {
    .textbox:hover {
        border-bottom: 5px solid white;
    }
}

.textbox:focus {
    outline: none;
    border-width: 0px;
    border-bottom: 5px solid white;
    color: white;
}

.buttonContainer {
    display: flex;
    align-items: stretch;
    flex-wrap: wrap;
    justify-content: center;

    /* need to make margin-bottom 15px less than margin-top since entries have 15px margin above them */
    margin-bottom: 20px;
}

.button {
    width: 40px;
    border-radius: 15px;
    font-size: 20px;
    text-align: center;
    margin: 20px calc(2vw + 10px);


    display: flex;
    justify-content: center;
    align-items: center;
    height: 40px;

    transition-duration: 200ms;
}

.disabledButton {
    border: 5px solid #999999;
    color: #999999;
}

.enabledButton {
    border: 5px solid #BBBBBB;
    color: #BBBBBB;
}

svg {
    fill: currentColor;
    stroke: currentColor;
}

@media (hover: hover) and (pointer: fine) {
    .enabledButton:hover {
        border: 5px solid white;
        color: white;
    }
}

.entryContainer {
    min-height: calc(50vh - 30px); /* 50vh - (margin-bottom for textbox container + margin-bottom for button container) */
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-content: flex-start;
    flex-wrap: wrap;
    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: border-box;    /* Firefox, other Gecko */
    box-sizing: border-box;         /* Opera/IE 8+ */
}

.entry {
    font-size: 25px;
    color: #BBBBBB;
    margin: 15px 50px;

    max-width: calc(100vw - 100px);
    text-align: center;

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;

    overflow-wrap: break-word;

    transform: translateX(30px);
    
}

.entry:hover {
    color: white;
}

.svgIcon {
    display: inline-block;
    min-height: 20px;
    max-height: 20px;
    min-width: 20px;
    max-width: 20px;
    margin: 10px 20px;
}

  
.svgIcon path,
.svgIcon polygon,

.svgIcon circle {
    stroke: #333333;
    stroke-width: 1.25px;
    min-height: 20px;
    max-height: 20px;
    min-width: 20px;
    max-width: 20px;
}

.svgIcon:hover {
    color: white;
}